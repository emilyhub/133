slice(arrange(imports, horsepower), c(1))
#5e
percent <- nrow(imports)/10
head(tail(sort(imports$city_mpg), n = percent), n = 1)
#5f
head(tail(sort(imports$highway_mpg), n = percent), n = 1)
#5e
median(arrange(imports, city_mpg)$price)
#5a
mean(na.exclude(imports[imports$fuel_type == "gas", "price"]))
mean(na.exclude(imports[imports$fuel_type == "diesel", "price"]))
#5b
imports[imports$num_of_cylinders == "twelve", "make"]
#5c
helper <- imports[imports$fuel_type == "diesel",]
helper2 <- table(helper$make)
h <- tail(names(sort(helper2)), n = 1)
h
#5d
slice(arrange(imports, horsepower), c(1))
#5e
percent <- nrow(imports)/10
tail(head(sort(imports$city_mpg), n = percent), n = 1)
#5f
head(tail(sort(imports$highway_mpg), n = percent), n = 1)
#5e
arrange(imports, city_mpg)$price
#5a
mean(na.exclude(imports[imports$fuel_type == "gas", "price"]))
mean(na.exclude(imports[imports$fuel_type == "diesel", "price"]))
#5b
imports[imports$num_of_cylinders == "twelve", "make"]
#5c
helper <- imports[imports$fuel_type == "diesel",]
helper2 <- table(helper$make)
h <- tail(names(sort(helper2)), n = 1)
h
#5d
slice(arrange(imports, horsepower), c(1))
#5e
percent <- nrow(imports)/10
tail(head(sort(imports$city_mpg), n = percent), n = 1)
#5f
head(tail(sort(imports$highway_mpg), n = percent), n = 1)
#5e
head(arrange(imports, city_mpg), n = percent)$price
#5a
mean(na.exclude(imports[imports$fuel_type == "gas", "price"]))
mean(na.exclude(imports[imports$fuel_type == "diesel", "price"]))
#5b
imports[imports$num_of_cylinders == "twelve", "make"]
#5c
helper <- imports[imports$fuel_type == "diesel",]
helper2 <- table(helper$make)
h <- tail(names(sort(helper2)), n = 1)
h
#5d
slice(arrange(imports, horsepower), c(1))
#5e
percent <- nrow(imports)/10
tail(head(sort(imports$city_mpg), n = percent), n = 1)
#5f
head(tail(sort(imports$highway_mpg), n = percent), n = 1)
#5e
median(head(arrange(imports, city_mpg), n = percent)$price, na.rm = TRUE)
#5a
mean(na.exclude(imports[imports$fuel_type == "gas", "price"]))
mean(na.exclude(imports[imports$fuel_type == "diesel", "price"]))
#5b
imports[imports$num_of_cylinders == "twelve", "make"]
#5c
helper <- imports[imports$fuel_type == "diesel",]
helper2 <- table(helper$make)
h <- tail(names(sort(helper2)), n = 1)
h
#5d
slice(arrange(imports, horsepower), c(1))
#5e
percent <- nrow(imports)/10
tail(head(sort(imports$city_mpg), n = percent), n = 1)
#5f
head(tail(sort(imports$highway_mpg), n = percent), n = 1)
#5e
median(head(arrange(imports, city_mpg), n = percent)$price, na.rm = TRUE)
imports$haha
#5a
mean(na.exclude(imports[imports$fuel_type == "gas", "price"]))
mean(na.exclude(imports[imports$fuel_type == "diesel", "price"]))
#5b
imports[imports$num_of_cylinders == "twelve", "make"]
#5c
helper <- imports[imports$fuel_type == "diesel",]
helper2 <- table(helper$make)
h <- tail(names(sort(helper2)), n = 1)
h
#5d
slice(arrange(imports, horsepower), c(1))
#5e
percent <- nrow(imports)/10
tail(head(sort(imports$city_mpg), n = percent), n = 1)
#5f
head(tail(sort(imports$highway_mpg), n = percent), n = 1)
#5e
median(head(arrange(imports, city_mpg), n = percent)$price, na.rm = TRUE)
imports$city_mpg
imports[ ,1]
imports[[1]]
imports[,city_mpg]
#5a
mean(na.exclude(imports[imports$fuel_type == "gas", "price"]))
mean(na.exclude(imports[imports$fuel_type == "diesel", "price"]))
#5b
imports[imports$num_of_cylinders == "twelve", "make"]
#5c
helper <- imports[imports$fuel_type == "diesel",]
helper2 <- table(helper$make)
h <- tail(names(sort(helper2)), n = 1)
h
#5d
slice(arrange(imports, horsepower), c(1))
#5e
percent <- nrow(imports)/10
tail(head(sort(imports$city_mpg), n = percent), n = 1)
#5f
head(tail(sort(imports$highway_mpg), n = percent), n = 1)
#5e
median(head(arrange(imports, city_mpg), n = percent)$price, na.rm = TRUE)
#imports$city_mpg
imports[ ,1]
imports[[1]]
#imports[,city_mpg]
imports[["city_mpg"]]
imports$"city_mpg"
imports[,"city_mpg"]
#5a
mean(na.exclude(imports[imports$fuel_type == "gas", "price"]))
mean(na.exclude(imports[imports$fuel_type == "diesel", "price"]))
#5b
imports[imports$num_of_cylinders == "twelve", "make"]
#5c
helper <- imports[imports$fuel_type == "diesel",]
helper2 <- table(helper$make)
h <- tail(names(sort(helper2)), n = 1)
h
#5d
slice(arrange(imports, horsepower), c(1))
#5e
percent <- nrow(imports)/10
tail(head(sort(imports$city_mpg), n = percent), n = 1)
#5f
head(tail(sort(imports$highway_mpg), n = percent), n = 1)
#5e
median(head(arrange(imports, city_mpg), n = percent)$price, na.rm = TRUE)
imports$city_mpg
#imports[ ,1]
#imports[[1]]
#imports[,city_mpg]
imports[["city_mpg"]]
imports$"city_mpg"
imports[,"city_mpg"]
#5a
mean(na.exclude(imports[imports$fuel_type == "gas", "price"]))
mean(na.exclude(imports[imports$fuel_type == "diesel", "price"]))
#5b
imports[imports$num_of_cylinders == "twelve", "make"]
#5c
helper <- imports[imports$fuel_type == "diesel",]
helper2 <- table(helper$make)
h <- tail(names(sort(helper2)), n = 1)
h
#5d
slice(arrange(imports, horsepower), c(1))
#5e
percent <- nrow(imports)/10
tail(head(sort(imports$city_mpg), n = percent), n = 1)
#5f
head(tail(sort(imports$highway_mpg), n = percent), n = 1)
#5e
median(head(arrange(imports, city_mpg), n = percent)$price, na.rm = TRUE)
as.list(imports)
#5a
mean(na.exclude(imports[imports$fuel_type == "gas", "price"]))
mean(na.exclude(imports[imports$fuel_type == "diesel", "price"]))
#5b
imports[imports$num_of_cylinders == "twelve", "make"]
#5c
helper <- imports[imports$fuel_type == "diesel",]
helper2 <- table(helper$make)
h <- tail(names(sort(helper2)), n = 1)
h
#5d
slice(arrange(imports, horsepower), c(1))
#5e
percent <- nrow(imports)/10
tail(head(sort(imports$city_mpg), n = percent), n = 1)
#5f
head(tail(sort(imports$highway_mpg), n = percent), n = 1)
#5e
median(head(arrange(imports, city_mpg), n = percent)$price, na.rm = TRUE)
abc <- as.list(imports)
bcd <- as.data.frame(abc)
type(bcd)
#5a
mean(na.exclude(imports[imports$fuel_type == "gas", "price"]))
mean(na.exclude(imports[imports$fuel_type == "diesel", "price"]))
#5b
imports[imports$num_of_cylinders == "twelve", "make"]
#5c
helper <- imports[imports$fuel_type == "diesel",]
helper2 <- table(helper$make)
h <- tail(names(sort(helper2)), n = 1)
h
#5d
slice(arrange(imports, horsepower), c(1))
#5e
percent <- nrow(imports)/10
tail(head(sort(imports$city_mpg), n = percent), n = 1)
#5f
head(tail(sort(imports$highway_mpg), n = percent), n = 1)
#5e
median(head(arrange(imports, city_mpg), n = percent)$price, na.rm = TRUE)
abc <- as.list(imports)
bcd <- as.data.frame(abc)
class(bcd)
#5a
mean(na.exclude(imports[imports$fuel_type == "gas", "price"]))
mean(na.exclude(imports[imports$fuel_type == "diesel", "price"]))
#5b
imports[imports$num_of_cylinders == "twelve", "make"]
#5c
helper <- imports[imports$fuel_type == "diesel",]
helper2 <- table(helper$make)
h <- tail(names(sort(helper2)), n = 1)
h
#5d
slice(arrange(imports, horsepower), c(1))
#5e
percent <- nrow(imports)/10
tail(head(sort(imports$city_mpg), n = percent), n = 1)
#5f
head(tail(sort(imports$highway_mpg), n = percent), n = 1)
#5e
median(head(arrange(imports, city_mpg), n = percent)$price, na.rm = TRUE)
abc <- as.list(imports)
class(abc)
bcd <- as.data.frame(abc)
class(bcd)
install.packages("corrplot")
library(corrplot)
M <- cor(imports)
M <- cor(x = imports)
numimp <- sapply(x, is.numeric)
numimp <- sapply(imports, is.numeric)
M <- cor(numimp)
numimp <- sapply(imports, is.numeric)
numimp
M <- cor(numimp)
numimp <- sapply(imports, is.numeric)
numimp
M <- cor(numimp)
numimp <- sapply(imports, is.numeric)
M <- cor(imports[, numimp])
numimp <- sapply(imports, is.numeric)
M <- cor(imports[, numimp])
corrplot(M, method="pie")
numimp <- sapply(imports, is.numeric)
numimp <- imports[, numimp]
M <- cor(numimp)
corrplot(M, method="pie")
numimp <- sapply(imports, is.numeric)
numimp <- imports[, numimp]
numimp
M <- cor(numimp)
corrplot(M, method="pie")
numimp <- sapply(imports, is.numeric)
numimp <- na.omit(imports[, numimp])
M <- cor(numimp)
corrplot(M, method="pie")
numimp <- sapply(imports, is.numeric)
numimp <- na.omit(imports[, numimp])
M <- cor(numimp)
corrplot(M, method="pie")
corrplot(M, method="color")
library(corrplot)
install.packages(corrplot)
install.packages("corrplot")
install.packages("corrplot")
library(corrplot)
knitr::opts_chunk$set(echo = TRUE)
corrplot(qdat, method="pie")
numimp <- sapply(imports, is.numeric)
numimp <- na.omit(imports[, numimp])
qdat <- cor(numimp)
corrplot(qdat, method="pie")
corrplot(qdat, method="color")
pca_prcomp <- prcomp(qdat, scale.
2
pca_prcomp <- prcomp(qdat, scale. = TRUE)
pca_prcomp <- prcomp(qdat, scale. = TRUE)
eigenvalues <- pca_prcomp$sdev^2
pca_prcomp <- prcomp(qdat, scale. = TRUE)
eigenvalues <- pca_prcomp$sdev^2
eigenvalues
pca_prcomp <- prcomp(qdat, scale. = TRUE)
eigenvalues <- pca_prcomp$sdev^2
head(eigenvalues, n=3)
pca_prcomp <- prcomp(qdat, scale. = TRUE)
eigenvalues <- pca_prcomp$sdev^2
eigenvalues
head(eigenvalues, n=3)
pca_prcomp <- prcomp(qdat, scale. = TRUE)
pca_prcomp
eigenvalues <- pca_prcomp$sdev^2
head(eigenvalues, n=3)
pca_prcomp <- prcomp(qdat, scale. = TRUE)
eigenvalues <- pca_prcomp$sdev^2
head(eigenvalues, n=3)
plot(pca_prcomp[,1], pca_prcomp[,2])
plot(pca_prcomp[[1]], pca_prcomp[,2])
plot(pca_prcomp[[1]], pca_prcomp[[2])
plot(pca_prcomp[[1]], pca_prcomp[[2]])
pca_prcomp
plot(pca_prcomp[[1]], pca_prcomp[[2]])
pca_prcomp[[1]]
plot(pca_prcomp[[1]], pca_prcomp[[2]])
pca_prcomp[[1]]
pca_prcomp[[2]]
plot(pca_prcomp[[1]], pca_prcomp[[2]])
pca_prcomp[,"PC1"]
pca_prcomp$PC1
pca_prcomp[,"PC2"]
firsttwo <- prcomp(slice(qdat), 1:2)
firsttwo <- prcomp(slice(qdat, 1:2))
firsttwo <- prcomp(qdat[,c(1, 2)])
plot(firsttwo)
firsttwo <- prcomp(qdat[,c(1, 2)])
scatterrsttwo)
firsttwo <- prcomp(qdat[,c(1, 2)])
scatterplot(firsttwo)
firsttwo <- prcomp(qdat[,c(1, 2)])
autoplot(firsttwo)
x <- prcomp(qdat[,c(1)])
y <- prcomp(qdat[,c(2)])
autoplot(x, y)
x <- prcomp(qdat[,c(1)])
y <- prcomp(qdat[,c(2)])
plot(x, y)
x <- prcomp(qdat[,c(1)])
y <- prcomp(qdat[,c(2)])
x
y
plot(x, y)
qdat[,c(1)]
x <- prcomp(qdat[,c(1)])
y <- prcomp(qdat[,c(2)])
plot(x, y)
qdat$1
qdat
x <- prcomp(qdat[,c(1)])
y <- prcomp(qdat[,c(2)])
plot(x, y)
qdat$x
prcomp(qdat)$x
x <- prcomp(qdat$x)
prcomp(qdat)$x$PC1
prcomp(qdat)$x
x <- prcomp(qdat$x)
prcomp(qdat)$x
x <- prcomp(qdat$x)
prcomp(qdat)$x
prcomp(qdat)$x$PC1
prcomp(qdat)$x
as.data.frame(prcomp(qdat)$x)
x <- prcomp(qdat$x)
prcomp(qdat)$x
as.data.frame(prcomp(qdat)$x)$PC1
x <- prcomp(qdat$x)
prcomp(qdat)$x
plot(as.data.frame(prcomp(qdat)$x)$PC1, as.data.frame(prcomp(qdat)$x)$PC2)
plot(as.data.frame(prcomp(qdat)$loading)$PC1, as.data.frame(prcomp(qdat)$loading)$PC2)
plot(na.rm(as.data.frame(prcomp(qdat)$loading)$PC1), na.rm(as.data.frame(prcomp(qdat)$loading)$PC2))
plot(na.omit(as.data.frame(prcomp(qdat)$loading)$PC1), na.omit(as.data.frame(prcomp(qdat)$loading)$PC2))
plot(as.data.frame(prcomp(qdat)$loading)$PC1, as.data.frame(prcomp(qdat)$loading)$PC2)
as.data.frame(prcomp(qdat)$loading)$PC1
plot(as.data.frame(prcomp(qdat)$loading)$PC1, as.data.frame(prcomp(qdat)$loading)$PC2)
as.data.frame(prcomp(qdat)$loading)
plot(as.data.frame(prcomp(qdat)$loading)$PC1, as.data.frame(prcomp(qdat)$loading)$PC2)
prcomp(qdat)$loading
plot(as.data.frame(prcomp(qdat)$loading)$PC1, as.data.frame(prcomp(qdat)$loading)$PC2)
prcomp(qdat)$rotation
plot(as.data.frame(prcomp(qdat)$rotation)$PC1, as.data.frame(prcomp(qdat)$rotation)$PC2)
plot(as.data.frame(prcomp(qdat)$x)$PC1, as.data.frame(prcomp(qdat)$x)$PC2, xlabel = "PC1", y.label = "PC2")
plot(as.data.frame(prcomp(qdat)$x)$PC1, as.data.frame(prcomp(qdat)$x)$PC2, xlab = "PC1", ylab = "PC2")
plot(as.data.frame(prcomp(qdat)$rotation)$PC1, as.data.frame(prcomp(qdat)$rotation)$PC2, xlab = "PC1", ylab = "PC2")
pca_prcomp <- prcomp(qdat, scale. = TRUE)
eigenvalues <- pca_prcomp$sdev^2
head(eigenvalues, n=3)
pca_prcomp <- prcomp(qdat, scale. = TRUE)
eigenvalues <- pca_prcomp$sdev^2
eigenvalues
head(eigenvalues, n=3)
plot(as.data.frame(prcomp(qdat)$rotation)$PC1, as.data.frame(prcomp(qdat)$rotation)$PC2, xlab = "PC1", ylab = "PC2")
library(readr)
colnames = c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels", "engine_location", "wheel_base", "length", "width", "height", "curb_weight", "engine_type", "num_of_cylinders", "engine_size", "fuel_system", "bore", "stroke", "compression_ratio", "horsepower", "peak_rpm", "city_mpg", "highway_mpg", "price")
colclass = c("integer", "double", "character", "character", "character","character","character","character","character", "double", "double", "double", "double", "integer", "character", "character", "integer", "character", "double", "double", "double", "integer", "integer", "integer", "integer", "integer")
imports <- read.csv(file="imports-85.data", col.names = colnames, colClasses = colclass, na.strings = c("?"), sep=",")
str(imports)
install.packages(readr)
install.packages("readr")
install.packages("readr")
library(readr)
knitr::opts_chunk$set(echo = TRUE)
imports2 = read_csv(file = "imports-85.data", na = c("?"), col_names = colnames, col_types = c(
symboling = col_integer(),
normalized_losses = col_double(),
make = col_character(),
fuel_type = col_character(),
aspiration = col_character(),
num_of_doors = col_character(),
body_style = col_character(),
drive_wheels = col_character(),
engine_location = col_character(),
wheel_base = col_double(),
length = col_double(),
width = col_double(),
height = col_double(),
curb_weight = col_double(),
engine_type = col_character(),
num_of_cylinders = col_character(),
engine_size = col_integer(),
fuel_system = col_character(),
bore = col_double(),
stroke = col_double(),
compression_ratio = col_integer(),
horsepower = col_integer(),
peak_rpm = col_integer(),
city_mpg = col_integer(),
highway_mpg = col_integer(),
price = col_integer()
))
str(imports2)
data.matrix(imports2)
library(knitr)
knit("hw01-Emily_Lan.rmd")
getwd()
setwd("C:/Users/Em/Documents")
imports2 = read_csv(file = "imports-85.data", na = c("?"), col_names = colnames, col_types = c(
symboling = col_integer(),
normalized_losses = col_double(),
make = col_character(),
fuel_type = col_character(),
aspiration = col_character(),
num_of_doors = col_character(),
body_style = col_character(),
drive_wheels = col_character(),
engine_location = col_character(),
wheel_base = col_double(),
length = col_double(),
width = col_double(),
height = col_double(),
curb_weight = col_double(),
engine_type = col_character(),
num_of_cylinders = col_character(),
engine_size = col_integer(),
fuel_system = col_character(),
bore = col_double(),
stroke = col_double(),
compression_ratio = col_integer(),
horsepower = col_integer(),
peak_rpm = col_integer(),
city_mpg = col_integer(),
highway_mpg = col_integer(),
price = col_integer()
))
setwd("~/R/lab06/code")
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
help(png)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
gg_pts_salary
gg_pts_salary <- ggplot(dat, aes(x=points, y=salary))+geom_points()
gg_pts_salary <- ggplot(dat, aes(x=points, y=salary)) + geom_point()
gg_pts_salary <- ggplot(dat, aes(x=points, y=salary))+geom_points()
gg_pts_salary <- ggplot(dat, aes(x=points, y=salary))+geom_point()
gg_pts_salary
source('~/R/lab06/code/lab06-script.R', echo=TRUE)
